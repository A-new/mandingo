#Mandingo's Sandbox Features

= Features =

== Main features ==

  * Source code available
  * Static and dynamic analysis
  * Windows binaries built ready for their use
  * Documentation for installation in macosx, but can be used also in linux/unix systems (work in progress)
  * Web interface (GUI) for ease to use
  * Several tools available from the command line
  * No database support required -all is stored in local files-
  * Traffic packet capture (.pcap)
  * Different Inline injection methods used:
    * "CreateRemoteThread" for handling normal processes
    * "QueueUserAPC" for handling suspended processes
  * Injection of windows console applications
  * Sub-processes "reinjection": automatically DLL injection of new processes -or modified processes- called from the sample that is being analyzed 
  * Lot of API calls traced
    * File operations: creation, renaming, deleting, copying...
    * Networking operations: http opening requests, perform internet connentios, socket opening, dns lookup...
    * Process operations: opening, creation, writing, remote thread creation, shell operations...
    * Registry operations: creation, opening, querying, setting...
    * Library operations: loading, getting addresses...
  * Full log, compact and very compact view modes.
  * Log highlighting. 
  * Very few 3rd party libraries required

== Web GUI features ===

=== Static analysis ===

  * *Details*: MD5, file size, file type (magic), internal compilation date, packer identification, compiler identification, version information
  * *Sections*: 
    * Name, entry, pointer to raw data, size of raw data, relative percentage, virtual address, flags, entropy, section dumping (raw), etc. 
    * Notifications when a section size or offset is invalid or too big.
  * *Resources*: 
    * Type, graphical display of bitmaps and icons, virtual address, offset to data, size, file offset, language identification, creation date, percentage, resource dumping (raw), etc. 
    * Notifications when a resource size is invalid or too big.
    * .Net resources are also identified
  * *Imports*: function names, addresses, libraries, links to online documentation
  * *Strings*: unicode strings, ascii strings
  * *Graph*: see the binary graphically. Very useful to identify compressed or encrypted parts, paddings, etc. Hexadecimal and ASCII dumping of the data, section starting markers, etc.

=== Dynamic analysis ===

  * *Processes*: PID, action (created, opened, written, alive...), status (new, running), process name. API log filtering by process ID.
  * *Libraries*: libraries and methods loaded at "run time"
  * *Registry* operations: 
    * Writing, opening, setting and querying. 
    * Important events highlighting
  * *File* operations: files created and deleted
  * *Networking*: navigate by the .pcap graphically
  * Desktop *screenshots*

=== Tools ===

==== miscelaneous ====

  * pefile dump_info()

==== monodevelop ====

  * 

==== radare2 ====

  * Information extraction:
    * binary info
    * entry point
    * imports
    * linked libraries
    * relocations
    * symbols
    * sections
    * strings in data section
    * raw strings
  * Interactive function listing and disassemble
  * Hashing